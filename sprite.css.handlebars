{{#spritesheet}}
//All changes in this file will be overwritten!

$sprite: (
    width: {{px.width}},
    height: {{px.height}},
    image: '{{image}}'
);
{{/spritesheet}}

{{#retina_spritesheet}}
$retina-sprite: (
    width: {{px.width}},
    height: {{px.height}},
    image: '{{image}}'
);
{{/retina_spritesheet}}

$sprite-icon: (
{{#sprites}}
    {{name}}: (
        x: {{px.offset_x}},
        y: {{px.offset_y}},
        width: {{px.width}},
        height: {{px.height}}
    ),
{{/sprites}}
);

@mixin sprite($icon, $size: true, $bg-size: true) {
    background-color: transparent;
    background-image: url(map-get($sprite, 'image'));
    background-repeat: no-repeat;
    background-position: map-get(map-get($sprite-icon, $icon), 'x') map-get(map-get($sprite-icon, $icon), 'y');

    @if($size == true) {
        width: map-get(map-get($sprite-icon, $icon), 'width');
        height: map-get(map-get($sprite-icon, $icon), 'height');
    }

    @media
    all and (-webkit-min-device-pixel-ratio: 2),
    all and (   min--moz-device-pixel-ratio: 2),
    all and (     -o-min-device-pixel-ratio: 2/1),
    all and (        min-device-pixel-ratio: 2),
    all and (                min-resolution: 192dpi),
    all and (                min-resolution: 2dppx) {
        background-image: url(map-get($retina-sprite, 'image'));
        background-repeat: no-repeat;
        @if($bg-size == true) {
            background-size: map-get($sprite, 'width') map-get($sprite, 'height');
        }
    }
}